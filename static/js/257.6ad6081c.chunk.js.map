{"version":3,"file":"static/js/257.6ad6081c.chunk.js","mappings":"qSAGaA,EAAQC,EAAAA,GAAAA,IAAH,mEAMLC,EAAQD,EAAAA,GAAAA,IAAH,0CAKLE,EAAYF,EAAAA,GAAAA,IAAH,4FAOTG,EAAQH,EAAAA,GAAAA,GAAH,kEAILI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,68BA2BVM,GAAgBN,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,4oB,SCrCpBO,EAAgB,IAAIC,EAAAA,EAoF1B,MAlFA,WAAyB,IAAD,YAEpB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAaC,EAAAA,EAAAA,MAAbD,SAEFE,GAAWC,EAAAA,EAAAA,MACXC,EAAU,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,KAE5CC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,+GAEaf,EAAcgB,iBAAiBT,GAF5C,gBAEFU,EAFE,EAEFA,KACRb,EAASa,GAHC,gDAKVX,EAAS,KAAMY,SALL,yDAAH,qDAQfH,GACH,GAAE,CAACR,IAEJ,IAAQY,EAAuDhB,EAAvDgB,YAAaC,EAA0CjB,EAA1CiB,MAAOC,EAAmClB,EAAnCkB,aAAcC,EAAqBnB,EAArBmB,OAAQC,EAAapB,EAAboB,SAElD,OACI,iCACI,SAAC1B,EAAD,CAAY2B,GAAIb,EAAhB,SAA4B,YAC3BR,IACG,UAACX,EAAD,WACK2B,GACG,SAACzB,EAAD,CAAO+B,IAAG,UAAKxB,EAAAA,EAAAA,QAAwBkB,GAAeO,IAAKN,KAE3D,SAACO,EAAA,EAAD,KAEJ,UAAChC,EAAD,YACI,wBAAKyB,KACL,yBAAG,eAAaQ,KAAKC,MAAqB,GAAfR,GAAmB,SAC9C,0BACI,uBAAG,eACFE,KAEJD,IACG,0BACI,uBAAG,aACFA,EAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAMzD5B,IAAS,SAAC,KAAD,CAAUmB,GAAG,aACvB,SAAC5B,EAAD,UAAO,4BACP,2BACI,yBACI,SAACG,EAAD,CACIyB,GAAE,OACFZ,MAAO,CAAEC,KAAI,iBAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAF5C,SAGC,YAIL,yBACI,SAACd,EAAD,CACIyB,GAAE,UACFZ,MAAO,CAAEC,KAAI,iBAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAF5C,SAGC,kBAKT,SAAC,EAAAqB,SAAD,CAAUC,UAAU,SAACR,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,QAKf,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Block = styled.div`\ndisplay: flex;\ngap: 20px;\nmargin: 20px;\n`;\n\nexport const Image = styled.img`\nheight: 400px;\n\n`;\n\nexport const InfoBlock = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 30px;\nwidth: 500px;\n`;\n\nexport const Title = styled.h3`\nmargin-left: 50px;\nmargin-bottom: 10px;\n`;\nexport const LinkStyled = styled(Link)`\nmargin-left: 20px;\ndisplay: inline-block;\n  background: rgb(183,76,255);\n  background: linear-gradient(90deg, rgba(183,76,255,1) 0%, rgba(94,88,255,1) 50%, rgba(247,122,254,1) 100%);\n  color: #fff;\n  border: none;\n  padding: 0.5rem 1rem;\n  text-align: center;\n  text-decoration: none;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 0.25rem;\n  transition:  0.2s ease-in-out;\n\n  &:hover {\n    background: rgb(122,28,186);\n    background: linear-gradient(90deg, rgba(122,28,186,1) 0%, rgba(39,34,173,1) 34%, rgba(27,244,255,1) 100%);\n    box-shadow: rgba(45, 35, 66, .4) 0 4px 8px, rgba(45, 35, 66, .3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;\n  }\n\n  &:focus {\n    background: rgb(122,28,186);\n    background: linear-gradient(90deg, rgba(122,28,186,1) 0%, rgba(39,34,173,1) 34%, rgba(27,244,255,1) 100%);\n    box-shadow: rgba(45, 35, 66, .4) 0 4px 8px, rgba(45, 35, 66, .3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;\n  }\n`;\nexport const NavLinkStyled = styled(Link)`\ncolor: black;\nmargin-left: 20px;\ntext-decoration: none;\ndisplay: block;\nwidth: 100px;\nbackground:\n    linear-gradient(\n      to right,\n      rgba(100, 200, 200, 1),\n      rgba(100, 200, 200, 1)\n    ),\n    linear-gradient(\n      to right,\n      rgba(255, 0, 0, 1),\n      rgba(255, 0, 180, 1),\n      rgba(0, 100, 200, 1)\n  );\n  background-size: 100% 3px, 0 3px;\n  background-position: 100% 100%, 0 100%;\n  background-repeat: no-repeat;\n  transition: background-size 400ms;\n}\n\n&:hover {\n  text-shadow: 3px 3px 20px #00bbff, -2px 1px 30px #00bbff;\n  color: #2722ad;\n  background-size: 0 3px, 100% 3px;\n}\n`;","import { useState, useEffect } from 'react';\nimport { TheMovieDbAPI } from 'components/services/api';\nimport { useParams,  useLocation, Outlet, Navigate } from 'react-router-dom';\nimport { Suspense } from \"react\";\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Block,\n  Image,\n  InfoBlock,\n  Title,\n  LinkStyled,\n  NavLinkStyled,\n} from './MovieDetails.styled';\nimport PropTypes from 'prop-types';\n\nconst theMovieDbAPI = new TheMovieDbAPI();\n\nfunction MovieDetails() {\n\n    const [movie, setMovie] = useState({});\n    const [error, setError] = useState('');\n\n    const { moviesId } = useParams();\n\n    const location = useLocation();\n    const goBackLink = location?.state?.from ?? '/';\n\n    useEffect(() => {\n        const getMovies = async () => {\n            try {\n                const { data } = await theMovieDbAPI.getMovieInfoById(moviesId);\n                setMovie(data);\n            } catch (error) {\n                setError(error.message);\n            }\n        };\n        getMovies();\n    }, [moviesId]);\n\n    const { poster_path, title, vote_average, genres, overview } = movie;\n\n    return (\n        <>\n            <LinkStyled to={goBackLink}>Go back</LinkStyled>\n            {movie && (\n                <Block>\n                    {poster_path ? (\n                        <Image src={`${TheMovieDbAPI.IMG_URL + poster_path}`} alt={title} />\n                    ) : (\n                        <Loader />\n                    )}\n                    <InfoBlock>\n                        <h1>{title}</h1>\n                        <p>User score: {Math.round(vote_average * 10)} %</p>\n                        <p>\n                            <b>Overview: </b>\n                            {overview}\n                        </p>\n                        {genres && (\n                            <p>\n                                <b>Genres: </b>\n                                {genres.map(genre => genre.name).join(', ')}\n                            </p>\n                        )}\n                    </InfoBlock>\n                </Block>\n            )}\n            {error && <Navigate to=\"/movies\" />}\n            <Title>Additional information</Title>\n            <ul>\n                <li>\n                    <NavLinkStyled\n                        to={`cast`}\n                        state={{ from: location?.state?.from ?? '/' }}\n                    >\n                        Cast\n                    </NavLinkStyled>\n                </li>\n                <li>\n                    <NavLinkStyled\n                        to={`reviews`}\n                        state={{ from: location?.state?.from ?? '/' }}\n                    >\n                        Reviews\n                    </NavLinkStyled>\n                </li>\n            </ul>\n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n\n};\n\nMovieDetails.propTypes = {\n    moviesId: PropTypes.number,\n};\n\nexport default MovieDetails;"],"names":["Block","styled","Image","InfoBlock","Title","LinkStyled","Link","NavLinkStyled","theMovieDbAPI","TheMovieDbAPI","useState","movie","setMovie","error","setError","moviesId","useParams","location","useLocation","goBackLink","state","from","useEffect","getMovies","getMovieInfoById","data","message","poster_path","title","vote_average","genres","overview","to","src","alt","Loader","Math","round","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}