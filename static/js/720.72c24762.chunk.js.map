{"version":3,"file":"static/js/720.72c24762.chunk.js","mappings":"4MAIaA,EAAYC,EAAAA,GAAAA,GAAH,oKASTC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uCAGVG,EAAQH,EAAAA,GAAAA,IAAH,yDAILI,EAAQJ,EAAAA,GAAAA,GAAH,+F,2BCbX,SAASK,EAAT,GAAiD,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YAC9BC,GAAWC,EAAAA,EAAAA,MACnB,OACE,SAACX,EAAD,WACE,UAACE,EAAD,CAAYU,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAAhD,UACID,GAAc,SAACL,EAAD,CAAOW,IAAG,UAAKC,EAAAA,EAAAA,QAAwBP,GAAeQ,IAAKT,KAAY,SAACJ,EAAD,CAAOW,IAAI,sCAAsCE,IAAI,qBAC5I,SAACZ,EAAD,UAAQG,QAHID,EAOnB,C,gHCfYS,EAAb,WAKI,cAAe,eACXE,KAAKC,KAAO,EACZD,KAAKE,OAAS,KACdF,KAAKG,SAAW,EACnB,CATL,iFAWI,WAAsBC,GAAtB,8EACIJ,KAAKC,KAAOG,EADhB,SAE2BC,EAAAA,EAAAA,IAAA,UAChBP,EAAcQ,SADE,wBAEnB,CACIC,OAAQ,CACJC,QAASV,EAAcW,QACvBR,KAAMD,KAAKC,QAP3B,cAEUS,EAFV,yBAWWA,GAXX,gDAXJ,sHAyBI,WAAqBC,GAArB,gFACUC,EAAe,CACjBL,OAAQ,CACJM,SAAU,QACVZ,KAAMD,KAAKC,KACXU,MAAOX,KAAKW,MACZH,QAASV,EAAcW,UANnC,SAU2BJ,EAAAA,EAAAA,IAAA,UAChBP,EAAcQ,SADE,iBAEnBM,GAZR,cAUUF,EAVV,yBAeWA,GAfX,gDAzBJ,wHA2CI,WAAuBrB,GAAvB,uFAC2BgB,EAAAA,EAAAA,IAAA,UAChBP,EAAcQ,SADE,kBACgBjB,EADhB,KAEnB,CACIkB,OAAQ,CACJC,QAASV,EAAcW,WALvC,cACUC,EADV,yBASWA,GATX,2CA3CJ,mHAuDI,WAAkBrB,GAAlB,uFAC2BgB,EAAAA,EAAAA,IAAA,UAChBP,EAAcQ,SADE,kBACgBjB,EADhB,aAEnB,CACIkB,OAAQ,CACJC,QAASV,EAAcW,QACvBI,SAAU,WAN1B,cACUH,EADV,yBAUWA,GAVX,2CAvDJ,kHAoEI,WAAiBrB,GAAjB,uFAC2BgB,EAAAA,EAAAA,IAAA,UAChBP,EAAcQ,SADE,kBACgBjB,EADhB,aAEnB,CACIkB,OAAQ,CACJC,QAASV,EAAcW,QACvBI,SAAU,QACVZ,KAAMD,KAAKC,QAP3B,cACUS,EADV,yBAWWA,GAXX,gDApEJ,8DAAaZ,EACFQ,SAAW,+BADTR,EAEFW,QAAU,mCAFRX,EAGFgB,QAAU,iC,6JCHRC,EAAOhC,EAAAA,GAAAA,KAAH,qHAQJiC,EAAQjC,EAAAA,GAAAA,MAAH,wPASLkC,EAASlC,EAAAA,GAAAA,OAAH,6wC,SCkBnB,I,EAAA,EAjCA,YAAiD,IAA3BmC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,aAC5B,GAAsCC,EAAAA,EAAAA,UAASD,GAAgB,IAA/D,eAAOE,EAAP,KAAoBC,EAApB,KACMC,GAAYC,EAAAA,EAAAA,UAYlB,OACI,UAACT,EAAD,CAAMG,SAXe,SAAAO,GACrBA,EAAMC,iBAENR,EAASG,EACZ,EAOG,WACI,SAACL,EAAD,CACIW,MAAON,EACPO,SARS,SAAAH,GACjBH,EAAeG,EAAMI,OAAOF,MAC/B,EAOWG,IAAKP,EACLQ,KAAK,OACLC,UAAQ,KAEZ,SAACf,EAAD,UAAQ,aAGnB,E,SC5BYgB,EAAYlD,EAAAA,GAAAA,GAAH,yL,SCMhBmD,EAAgB,IAAIpC,EAAAA,EAmD1B,MAjDA,WACI,OAA4BsB,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACA,GAA0BhB,EAAAA,EAAAA,UAAS,MAAnC,eAAOiB,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAO3B,EAAP,KAAqB4B,EAArB,KAEMC,EAAc7B,EAAa8B,IAAI,SA0BrC,OAzBAR,EAAcvB,MAAQ8B,GAEtBE,EAAAA,EAAAA,YAAU,WACN,GAAoB,OAAhBF,EAAJ,CAEA,IAAMG,EAAS,mCAAG,+GAEaV,EAAcW,iBAF3B,gBAGkB,KADpBC,EAFE,EAEFA,MACCC,QAAQC,OACbV,EAAS,uBAETF,EAAUU,EAAKC,SACfT,EAAS,OAPH,gDAUVA,EAAS,KAAMW,SAVL,yDAAH,qDAafL,GAfgC,CAgBnC,GAAE,CAACH,KAOA,gCACI,SAAC,EAAD,CAAYtB,aAAcsB,EAAavB,SAN9B,SAAAG,GACbmB,EAAgB,CAAE7B,MAAOU,GAC5B,KAKO,SAACY,EAAD,UACgB,IAAXE,GACGA,EAAOe,KAAI,SAAAC,GAAK,OAAI,mBAAC/D,EAAA,GAAD,kBAAgB+D,GAAhB,IAAuBC,IAAKD,EAAM9D,KAAtC,MAEvBgD,IAAS,uBAAIA,MAIzB,C,sBCrDc,SAASgB,EAAgBC,EAAKF,EAAKzB,GAYhD,OAXIyB,KAAOE,EACTC,OAAOC,eAAeF,EAAKF,EAAK,CAC9BzB,MAAOA,EACP8B,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIF,GAAOzB,EAGN2B,CACT,CCXA,SAASM,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,UACtD,KAAKM,EAAKM,KAAKC,MAAMP,EAAME,EAC7B,CAEA,OAAOF,CACT,CAEe,SAASQ,EAAe1C,GACrC,IAAK,IAAI2C,EAAI,EAAGA,EAAIC,UAAUzB,OAAQwB,IAAK,CACzC,IAAIE,EAAS,MAAQD,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIZ,EAAQL,OAAOmB,IAAS,GAAIC,SAAQ,SAAUvB,GACpD,EAAevB,EAAQuB,EAAKsB,EAAOtB,GACrC,IAAKG,OAAOqB,0BAA4BrB,OAAOsB,iBAAiBhD,EAAQ0B,OAAOqB,0BAA0BF,IAAWd,EAAQL,OAAOmB,IAASC,SAAQ,SAAUvB,GAC5JG,OAAOC,eAAe3B,EAAQuB,EAAKG,OAAOa,yBAAyBM,EAAQtB,GAC7E,GACF,CAEA,OAAOvB,CACT,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/services/api.js","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\nexport const MovieItem = styled.li`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 10px;  \n  margin-left: auto;\n  margin-right: auto;\n  width: calc((100% - 120px) / 5);\n`;\n\nexport const LinkStyled = styled(Link)`\ncolor: black;\n`;\nexport const Image = styled.img`\nheight: 400px;\nmargin: 0 auto;\n`;\nexport const Title = styled.h3`\nwidth: 260px;\ntext-wrap: wrap;\ntext-align: center;\nmargin: 0 auto;\n`;","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { MovieItem, LinkStyled,Image, Title } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { TheMovieDbAPI } from 'components/services/api';\n// import { Loader } from 'components/Loader/Loader';\n\nexport function MoviesList({ id, title, poster_path }) {\n    const location = useLocation();\n  return (\n    <MovieItem key={id}>\n      <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n        { poster_path ? <Image src={`${TheMovieDbAPI.IMG_URL + poster_path}`} alt={title} /> : <Image src='https://via.placeholder.com/270x400' alt='image not found' />}        \n        <Title>{title}</Title>\n      </LinkStyled>\n    </MovieItem>\n  );\n}\n\n\nMoviesList.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};","import axios from 'axios';\n\nexport class TheMovieDbAPI {\n    static BASE_URL = 'https://api.themoviedb.org/3';\n    static API_KEY = '6f00573c2ff703f4ade68ffc885f70a7';\n    static IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n    constructor() {\n        this.page = 1;\n        this.querry = null;\n        this.per_page = 20;\n    }\n\n    async getPopularFilms(pageNumber) {\n        this.page = pageNumber;\n        const response = await axios.get(\n            `${TheMovieDbAPI.BASE_URL}/trending/movie/week`,\n            {\n                params: {\n                    api_key: TheMovieDbAPI.API_KEY,\n                    page: this.page,\n                },\n            }\n        );\n        return response;\n    }\n\n    async fetchUniqFilms(query) {\n        const searchParams = {\n            params: {\n                language: 'en-US',\n                page: this.page,\n                query: this.query,\n                api_key: TheMovieDbAPI.API_KEY,\n            },\n        };\n\n        const response = await axios.get(\n            `${TheMovieDbAPI.BASE_URL}/search/movie`,\n            searchParams\n        );\n\n        return response;\n    }\n    \n    async getMovieInfoById(id) {\n        const response = await axios.get(\n            `${TheMovieDbAPI.BASE_URL}/movie/${id}?`,\n            {\n                params: {\n                    api_key: TheMovieDbAPI.API_KEY,\n                },\n            }\n        );\n        return response;\n    }\n \n    async getCastInfo(id) {\n        const response = await axios.get(\n            `${TheMovieDbAPI.BASE_URL}/movie/${id}/credits?`,\n            {\n                params: {\n                    api_key: TheMovieDbAPI.API_KEY,\n                    language: 'en-US',\n                },\n            }\n        );\n        return response;\n    }\n\n    async getReviews(id) {\n        const response = await axios.get(\n            `${TheMovieDbAPI.BASE_URL}/movie/${id}/reviews?`,\n            {\n                params: {\n                    api_key: TheMovieDbAPI.API_KEY,\n                    language: 'en-US',\n                    page: this.page,\n                },\n            }\n        );\n        return response;\n    }\n\n\n}","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 30%;\n  gap: 20px;\n  margin-left: 20px;\n`;\n\nexport const Input = styled.input`\n  border: 2px solid #2722ad;\n  border-radius: 6px;\n  padding: 10px;\n  font-size: 16px;\n  flex: 1;\n  box-shadow: rgba(45, 35, 66, .4) 0 2px 4px,rgba(45, 35, 66, .3) 0 7px 13px -3px,rgba(58, 65, 111, .5) 0 -3px 0 inset;\n`;\n\nexport const Button = styled.button`\nalign-items: center;\n  appearance: none;\n  background-image: radial-gradient(100% 100% at 100% 0, #5adaff 0, #5468ff 100%);\n  border: 0;\n  border-radius: 6px;\n  box-shadow: rgba(45, 35, 66, .4) 0 2px 4px,rgba(45, 35, 66, .3) 0 7px 13px -3px,rgba(58, 65, 111, .5) 0 -3px 0 inset;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: \"JetBrains Mono\",monospace;\n  height: 45px;\n  justify-content: center;\n  line-height: 1;\n  list-style: none;\n  overflow: hidden;\n  padding-left: 16px;\n  padding-right: 16px;\n  position: relative;\n  text-align: left;\n  text-decoration: none;\n  transition: box-shadow .15s,transform .15s;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  will-change: box-shadow,transform;\n  font-size: 18px;\n\n  &:focus {\n    box-shadow: #3c4fe0 0 0 0 1.5px inset, rgba(45, 35, 66, .4) 0 2px 4px, rgba(45, 35, 66, .3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;\n  }\n\n  &:hover {\n  box-shadow: rgba(45, 35, 66, .4) 0 4px 8px, rgba(45, 35, 66, .3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;\n  transform: translateY(-2px);\n  }\n\n   &:active {\n    box-shadow: #3c4fe0 0 3px 7px inset;\n    transform: translateY(2px);\n   }\n`;\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from './SearchForm.styled';\n\nfunction SearchForm({ onSubmit, defaultValue }) {\n    const [searchValue, setSearchValue] = useState(defaultValue || '');\n    const searchRef = useRef();\n\n    const handleSubmitForm = event => {\n        event.preventDefault();\n\n        onSubmit(searchValue);\n    };\n\n    const handleChange = event => {\n        setSearchValue(event.target.value);\n    };\n\n    return (\n        <Form onSubmit={handleSubmitForm}>\n            <Input\n                value={searchValue}\n                onChange={handleChange}\n                ref={searchRef}\n                type=\"text\"\n                required\n            />\n            <Button>Search</Button>\n        </Form>\n    );\n}\n\nSearchForm.propTypes = {\n    defaultValue: PropTypes.string,\n    onSubmit: PropTypes.func,\n};\n\nexport default SearchForm;\n\n\n\n\n\n\n\n// import React, { useRef } from 'react';\n// import PropTypes from 'prop-types';\n// import { Form, Input, Button } from './SearchForm.styled';\n\n// function SearchForm({ onSubmit, defaultValue }) {\n//     const searchRef = useRef();\n\n//     const handleSubmitForm = event => {\n//         event.preventDefault();\n\n//         onSubmit(searchRef.current.value);\n//     };\n\n//     return (\n//         <Form onSubmit={handleSubmitForm}>\n//             <Input defaultValue={defaultValue} ref={searchRef} type=\"text\" required />\n//             <Button>Search</Button>\n//         </Form>\n//     );\n\n// }\n\n// SearchForm.propTypes = {\n//     defaultValue: PropTypes.string,\n//     onSubmit: PropTypes.func,\n// };\n\n// export default SearchForm;\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 10px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { TheMovieDbAPI } from 'components/services/api';\nimport { MovieList } from './Movies.styled';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport PropTypes from 'prop-types';\n\nconst theMovieDbAPI = new TheMovieDbAPI();\n\nfunction Movies() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const searchQuery = searchParams.get('query');\n    theMovieDbAPI.query = searchQuery;\n\n    useEffect(() => {\n        if (searchQuery === null) return;\n\n        const getMovies = async () => {\n            try {\n                const { data } = await theMovieDbAPI.fetchUniqFilms();\n                if (data.results.length === 0) {\n                    setError('Movie not found...');\n                } else {\n                    setMovies(data.results);\n                    setError(null);\n                }\n            } catch (error) {\n                setError(error.message);\n            }\n        };\n        getMovies();\n    }, [searchQuery]);\n\n    const onSubmit = searchValue => {\n        setSearchParams({ query: searchValue });\n    };\n\n    return (\n        <section>\n            <SearchForm defaultValue={searchQuery} onSubmit={onSubmit} />\n            <MovieList>\n                {movies !== 0 &&\n                    movies.map(movie => <MoviesList {...movie} key={movie.id} />)}\n            </MovieList>\n            {error && <p>{error}</p>}\n        </section>\n    );\n\n}\n\nMovies.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Movies;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["MovieItem","styled","LinkStyled","Link","Image","Title","MoviesList","id","title","poster_path","location","useLocation","to","state","from","src","TheMovieDbAPI","alt","this","page","querry","per_page","pageNumber","axios","BASE_URL","params","api_key","API_KEY","response","query","searchParams","language","IMG_URL","Form","Input","Button","onSubmit","defaultValue","useState","searchValue","setSearchValue","searchRef","useRef","event","preventDefault","value","onChange","target","ref","type","required","MovieList","theMovieDbAPI","movies","setMovies","error","setError","useSearchParams","setSearchParams","searchQuery","get","useEffect","getMovies","fetchUniqFilms","data","results","length","message","map","movie","key","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}